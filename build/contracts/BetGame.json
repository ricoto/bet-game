{
  "contractName": "BetGame",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "win",
          "type": "bool"
        }
      ],
      "name": "MakeBetEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WithdrawAllEvent",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum BetGame.COIN_STATE",
          "name": "coinState",
          "type": "uint8"
        }
      ],
      "name": "makeBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getGameBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"win\",\"type\":\"bool\"}],\"name\":\"MakeBetEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WithdrawAllEvent\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGameBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum BetGame.COIN_STATE\",\"name\":\"coinState\",\"type\":\"uint8\"}],\"name\":\"makeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ricoto86/projects/course/bet-game-project/contracts/BetGame.sol\":\"BetGame\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ricoto86/projects/course/bet-game-project/contracts/BetGame.sol\":{\"keccak256\":\"0xad7c9ad8ebb3ce3f687ffa8491af24b9654ca6e0e73d868c944aff32c0ad6ad0\",\"urls\":[\"bzz-raw://9746cec4c25893b09e64a3740b252cc2c821f20597f21525a2e1fbb242369120\",\"dweb:/ipfs/QmVDKUk7vzGsWLPcurkHZ5KjmWvXjdAgELTq8B9QoT1aFG\"]},\"/Users/ricoto86/projects/course/bet-game-project/contracts/Destroyable.sol\":{\"keccak256\":\"0xae1d8227ccd776393ac67f2011131c40044333865fb0eb1dc0e2a67d3a167f04\",\"urls\":[\"bzz-raw://622fb8617afe0f2bb41c02c9a7047f607bbbd0f6005a6dd7609a9aa9a96b876f\",\"dweb:/ipfs/QmeoEc5YCLpwLjk1Kp2w6G9MQSU5XWshAYRk5Aa1ShPZ2Q\"]},\"/Users/ricoto86/projects/course/bet-game-project/contracts/Ownable.sol\":{\"keccak256\":\"0xe87130bfd45680a268fa0d0e5b716c5985e73ec7b051505ce993063d36f749da\",\"urls\":[\"bzz-raw://5555f3209739b71c27480441adc042a9cadd014280ec9e4f898e0bd9a2528495\",\"dweb:/ipfs/QmU7VBEvyFUR7Pv6MAnuS2gjBWUWHpX8CYi3D2B228zLhr\"]},\"/Users/ricoto86/projects/course/bet-game-project/contracts/Payable.sol\":{\"keccak256\":\"0x94fd8dd4fa45ff2908b03cdbe153355b8201fd47c9df7b1cd651d2a83c1e520e\",\"urls\":[\"bzz-raw://34b39ccb69037910029403b4572dc75be23205d67e1515846c5e30d46fb06688\",\"dweb:/ipfs/QmXAyKTpbZRodPBPNMYCBGs874zdQ16HPR4ngya8wqXibU\"]},\"/Users/ricoto86/projects/course/bet-game-project/contracts/ReentranceGuard.sol\":{\"keccak256\":\"0x683a0d2593702c8048d621c21afa849a1421a4441d51e3311401dcde38c681cf\",\"urls\":[\"bzz-raw://c136b191d732d2fbc46f61a728090a3cd636e792a92efe9474afc55c39e0320b\",\"dweb:/ipfs/QmXYwoSHwwTzBBJdzSAADohc7ezYsZBwgx2EPsyjVrGxQj\"]}},\"version\":1}",
  "bytecode": "0x60a060405260008060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050670de0b6b3a76400008034148160405160200180807f466978656420616d6f756e742073686f756c64206265207061737365643a2000815250601f01828152602001807f207765690000000000000000000000000000000000000000000000000000000081525060040191505060405160208183030381529060405290610177576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561013c578082015181840152602081019050610121565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505060805160601c61064961019b600039806103cf528061048c52506106496000f3fe6080604052600436106100435760003560e01c8063043336bf1461004657806383197ef014610077578063853828b61461008e578063c574d156146100a557610044565b5b005b6100756004803603602081101561005c57600080fd5b81019080803560ff1690602001909291905050506100d0565b005b34801561008357600080fd5b5061008c6103cd565b005b34801561009a57600080fd5b506100a361048a565b005b3480156100b157600080fd5b506100ba6105a3565b6040518082815260200191505060405180910390f35b67016345785d8a00008034148160405160200180807f466978656420616d6f756e742073686f756c64206265207061737365643a2000815250601f01828152602001807f2077656900000000000000000000000000000000000000000000000000000000815250600401915050604051602081830303815290604052906101f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156101b757808201518184015260208101905061019c565b50505050905090810190601f1680156101e45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008054906101000a900460ff1615610257576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806105ce6024913960400191505060405180910390fd5b60016000806101000a81548160ff02191690831515021790555067016345785d8a0000804710156102f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e6f7420656e6f7567682062616c616e636520746f20706c617900000000000081525060200191505060405180910390fd5b60006102fa6105ab565b9050600084600181111561030a57fe5b82600181111561031657fe5b1415610373573373ffffffffffffffffffffffffffffffffffffffff166108fc600267016345785d8a0000029081150290604051600060405180830381858888f1935050505015801561036d573d6000803e3d6000fd5b50600190505b7fdcbb43d7a99fa0abf3c369ade61f031e748e7398fc3774d6ef6819fd5f26e2e58160405180821515815260200191505060405180910390a150505060008060006101000a81548160ff0219169083151502179055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806105f26022913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806105f26022913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610574573d6000803e3d6000fd5b507f6aa1042049a04c07e8d72903f147a9cab5f3273a43479d2d211147df8ec5384560405160405180910390a1565b600047905090565b600080600242816105b857fe5b06146105c55760016105c8565b60005b90509056fe48617320616c726561647920656e74657265642074686973206d6574686f64206f6e63654f776e6572206f6e6c792063616e20657865637574652074686973206d6574686f64a26469706673582212201dc67dfbc57c4c57307bd2de1defc65ccff9a08f4d7083fc0e200acbe97a771764736f6c63430007050033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c8063043336bf1461004657806383197ef014610077578063853828b61461008e578063c574d156146100a557610044565b5b005b6100756004803603602081101561005c57600080fd5b81019080803560ff1690602001909291905050506100d0565b005b34801561008357600080fd5b5061008c6103cd565b005b34801561009a57600080fd5b506100a361048a565b005b3480156100b157600080fd5b506100ba6105a3565b6040518082815260200191505060405180910390f35b67016345785d8a00008034148160405160200180807f466978656420616d6f756e742073686f756c64206265207061737365643a2000815250601f01828152602001807f2077656900000000000000000000000000000000000000000000000000000000815250600401915050604051602081830303815290604052906101f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156101b757808201518184015260208101905061019c565b50505050905090810190601f1680156101e45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008054906101000a900460ff1615610257576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806105ce6024913960400191505060405180910390fd5b60016000806101000a81548160ff02191690831515021790555067016345785d8a0000804710156102f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e6f7420656e6f7567682062616c616e636520746f20706c617900000000000081525060200191505060405180910390fd5b60006102fa6105ab565b9050600084600181111561030a57fe5b82600181111561031657fe5b1415610373573373ffffffffffffffffffffffffffffffffffffffff166108fc600267016345785d8a0000029081150290604051600060405180830381858888f1935050505015801561036d573d6000803e3d6000fd5b50600190505b7fdcbb43d7a99fa0abf3c369ade61f031e748e7398fc3774d6ef6819fd5f26e2e58160405180821515815260200191505060405180910390a150505060008060006101000a81548160ff0219169083151502179055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806105f26022913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806105f26022913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610574573d6000803e3d6000fd5b507f6aa1042049a04c07e8d72903f147a9cab5f3273a43479d2d211147df8ec5384560405160405180910390a1565b600047905090565b600080600242816105b857fe5b06146105c55760016105c8565b60005b90509056fe48617320616c726561647920656e74657265642074686973206d6574686f64206f6e63654f776e6572206f6e6c792063616e20657865637574652074686973206d6574686f64a26469706673582212201dc67dfbc57c4c57307bd2de1defc65ccff9a08f4d7083fc0e200acbe97a771764736f6c63430007050033",
  "immutableReferences": {
    "191": [
      {
        "length": 32,
        "start": 975
      },
      {
        "length": 32,
        "start": 1164
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "109:1147:0:-:0;;;86:5:5;63:28;;;;;;;;;;;;;;;;;;;;235:10:3;227:18;;;;;;;;;;;;283:7:0;108:4:4;95:9;:17;173:4;121:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;87:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;435:57:0;109:1147;;;;;;;;;;;",
  "deployedSourceMap": "109:1147:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;496:307;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;95:69:1;;;;;;;;;;;;;:::i;:::-;;903:122:0;;;;;;;;;;;;;:::i;:::-;;807:92;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;496:307;207:14;108:4:4;95:9;:17;173:4;121:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;87:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;135:7:5::1;::::0;::::1;;;;;;;;134:8;126:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;199:4;189:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;207::0::2;286:10:4;261:21;:35;;253:74;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;616:22:0::3;641:13;:11;:13::i;:::-;616:38;;660:8;701:9;686:24;;;;;;;;:11;:24;;;;;;;;;682:89;;;720:10;:19;;:26;337:1;207:14;325:13;720:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;760:4;754:10;;682:89;781:17;794:3;781:17;;;;;;;;;;;;;;;;;;;;333:1:4;;209::5::2;226:5:::1;216:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;496:307:0::0;;:::o;95:69:1:-;147:5:3;133:19;;:10;:19;;;125:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;148:10:1::1;135:24;;;903:122:0::0;147:5:3;133:19;;:10;:19;;;125:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;949:10:0::1;:19;;:42;969:21;949:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1002:18;;;;;;;;;;903:122::o:0;807:92::-;854:4;873:21;866:28;;807:92;:::o;1029:135::-;1074:10;1122:1;1117;1099:15;:19;;;;;;:24;:60;;1144:15;1099:60;;;1126:15;1099:60;1092:67;;1029:135;:::o",
  "source": "pragma solidity 0.7.5;\n\nimport \"./Destroyable.sol\";\nimport \"./Payable.sol\";\nimport \"./ReentranceGuard.sol\";\n\ncontract BetGame is Destroyable, Payable, ReentranceGuard {\n\n  uint constant internal BET_PRICE = 100000000 gwei; // 1/10 of ether\n  uint constant internal INITIAL_BALANCE = 1 ether;\n  uint constant internal PRIZE = BET_PRICE * 2;\n\n  enum COIN_STATE {HEAD, TAIL}\n  event MakeBetEvent(bool win);\n  event WithdrawAllEvent();\n\n  constructor() public payable costs(INITIAL_BALANCE) {\n  }\n\n  function makeBet(COIN_STATE coinState) public payable costs(BET_PRICE) nonReentrant() hasEnoughBalance(BET_PRICE) {\n    COIN_STATE randomState = randomState();\n    bool win = false;\n    if (randomState == coinState) {\n      msg.sender.transfer(PRIZE);\n      win = true;\n    }\n    emit MakeBetEvent(win);\n  }\n\n  function getGameBalance() public view returns (uint) {\n    return address(this).balance;\n  }\n\n  function withdrawAll() public isOwner() {\n    msg.sender.transfer(address(this).balance);\n    emit WithdrawAllEvent();\n  }\n\n  function randomState() private view returns (COIN_STATE) {\n    return block.timestamp % 2 == 0 ? COIN_STATE.HEAD : COIN_STATE.TAIL;\n  }\n\n  // in case someone wants to recharge game balance\n  fallback() external payable {\n  }\n\n}\n",
  "sourcePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/BetGame.sol",
  "ast": {
    "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/BetGame.sol",
    "exportedSymbols": {
      "BetGame": [
        137
      ],
      "Destroyable": [
        154
      ],
      "Ownable": [
        213
      ],
      "Payable": [
        255
      ],
      "ReentranceGuard": [
        279
      ]
    },
    "id": 138,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/Destroyable.sol",
        "file": "./Destroyable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 155,
        "src": "24:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/Payable.sol",
        "file": "./Payable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 256,
        "src": "52:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/ReentranceGuard.sol",
        "file": "./ReentranceGuard.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 280,
        "src": "76:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Destroyable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 154,
              "src": "129:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destroyable_$154",
                "typeString": "contract Destroyable"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "129:11:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "Payable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 255,
              "src": "142:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Payable_$255",
                "typeString": "contract Payable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "142:7:0"
          },
          {
            "baseName": {
              "id": 9,
              "name": "ReentranceGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 279,
              "src": "151:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentranceGuard_$279",
                "typeString": "contract ReentranceGuard"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "151:15:0"
          }
        ],
        "contractDependencies": [
          154,
          213,
          255,
          279
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 137,
        "linearizedBaseContracts": [
          137,
          279,
          255,
          154,
          213
        ],
        "name": "BetGame",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 13,
            "mutability": "constant",
            "name": "BET_PRICE",
            "nodeType": "VariableDeclaration",
            "scope": 137,
            "src": "172:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "172:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030303030",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "207:14:0",
              "subdenomination": "gwei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "100000000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 16,
            "mutability": "constant",
            "name": "INITIAL_BALANCE",
            "nodeType": "VariableDeclaration",
            "scope": 137,
            "src": "242:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "242:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "283:7:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 21,
            "mutability": "constant",
            "name": "PRIZE",
            "nodeType": "VariableDeclaration",
            "scope": 137,
            "src": "294:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "294:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "id": 18,
                "name": "BET_PRICE",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 13,
                "src": "325:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "32",
                "id": 19,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "337:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "src": "325:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "BetGame.COIN_STATE",
            "id": 24,
            "members": [
              {
                "id": 22,
                "name": "HEAD",
                "nodeType": "EnumValue",
                "src": "360:4:0"
              },
              {
                "id": 23,
                "name": "TAIL",
                "nodeType": "EnumValue",
                "src": "366:4:0"
              }
            ],
            "name": "COIN_STATE",
            "nodeType": "EnumDefinition",
            "src": "343:28:0"
          },
          {
            "anonymous": false,
            "id": 28,
            "name": "MakeBetEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "win",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "393:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "392:10:0"
            },
            "src": "374:29:0"
          },
          {
            "anonymous": false,
            "id": 30,
            "name": "WithdrawAllEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "428:2:0"
            },
            "src": "406:25:0"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "487:5:0",
              "statements": []
            },
            "id": 37,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 33,
                    "name": "INITIAL_BALANCE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16,
                    "src": "470:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 34,
                "modifierName": {
                  "id": 32,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 237,
                  "src": "464:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "464:22:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:0"
            },
            "scope": 137,
            "src": "435:57:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "610:193:0",
              "statements": [
                {
                  "assignments": [
                    51
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51,
                      "mutability": "mutable",
                      "name": "randomState",
                      "nodeType": "VariableDeclaration",
                      "scope": 80,
                      "src": "616:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_COIN_STATE_$24",
                        "typeString": "enum BetGame.COIN_STATE"
                      },
                      "typeName": {
                        "id": 50,
                        "name": "COIN_STATE",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 24,
                        "src": "616:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_COIN_STATE_$24",
                          "typeString": "enum BetGame.COIN_STATE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52,
                      "name": "randomState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "641:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_COIN_STATE_$24_$",
                        "typeString": "function () view returns (enum BetGame.COIN_STATE)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "641:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_COIN_STATE_$24",
                      "typeString": "enum BetGame.COIN_STATE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "616:38:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "win",
                      "nodeType": "VariableDeclaration",
                      "scope": 80,
                      "src": "660:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "660:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "671:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "660:16:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_COIN_STATE_$24",
                      "typeString": "enum BetGame.COIN_STATE"
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59,
                      "name": "randomState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "686:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_COIN_STATE_$24",
                        "typeString": "enum BetGame.COIN_STATE"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 60,
                      "name": "coinState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "701:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_COIN_STATE_$24",
                        "typeString": "enum BetGame.COIN_STATE"
                      }
                    },
                    "src": "686:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75,
                  "nodeType": "IfStatement",
                  "src": "682:89:0",
                  "trueBody": {
                    "id": 74,
                    "nodeType": "Block",
                    "src": "712:59:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67,
                              "name": "PRIZE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "740:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 62,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "720:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 65,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "720:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 66,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "720:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "720:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 69,
                        "nodeType": "ExpressionStatement",
                        "src": "720:26:0"
                      },
                      {
                        "expression": {
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 70,
                            "name": "win",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "754:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "760:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "754:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73,
                        "nodeType": "ExpressionStatement",
                        "src": "754:10:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 77,
                        "name": "win",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "794:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 76,
                      "name": "MakeBetEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "781:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "781:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "EmitStatement",
                  "src": "776:22:0"
                }
              ]
            },
            "functionSelector": "043336bf",
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42,
                    "name": "BET_PRICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "556:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 43,
                "modifierName": {
                  "id": 41,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 237,
                  "src": "550:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "550:16:0"
              },
              {
                "arguments": [],
                "id": 45,
                "modifierName": {
                  "id": 44,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 278,
                  "src": "567:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "567:14:0"
              },
              {
                "arguments": [
                  {
                    "id": 47,
                    "name": "BET_PRICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "599:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 48,
                "modifierName": {
                  "id": 46,
                  "name": "hasEnoughBalance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "582:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "582:27:0"
              }
            ],
            "name": "makeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "coinState",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "513:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_COIN_STATE_$24",
                    "typeString": "enum BetGame.COIN_STATE"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "COIN_STATE",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 24,
                    "src": "513:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_COIN_STATE_$24",
                      "typeString": "enum BetGame.COIN_STATE"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "512:22:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:0:0"
            },
            "scope": 137,
            "src": "496:307:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "860:39:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 88,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "881:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BetGame_$137",
                            "typeString": "contract BetGame"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BetGame_$137",
                            "typeString": "contract BetGame"
                          }
                        ],
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "873:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 86,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "873:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "873:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "873:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 85,
                  "id": 91,
                  "nodeType": "Return",
                  "src": "866:28:0"
                }
              ]
            },
            "functionSelector": "c574d156",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGameBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "830:2:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "854:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "853:6:0"
            },
            "scope": 137,
            "src": "807:92:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "943:82:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 105,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "977:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BetGame_$137",
                                "typeString": "contract BetGame"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BetGame_$137",
                                "typeString": "contract BetGame"
                              }
                            ],
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "969:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 103,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "969:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "969:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "969:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 98,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "949:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "949:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "949:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "949:42:0"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110,
                      "name": "WithdrawAllEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1002:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "EmitStatement",
                  "src": "997:23:0"
                }
              ]
            },
            "functionSelector": "853828b6",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 96,
                "modifierName": {
                  "id": 95,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 203,
                  "src": "933:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "933:9:0"
              }
            ],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:2:0"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:0"
            },
            "scope": 137,
            "src": "903:122:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "1086:78:0",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 119,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1099:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1099:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1117:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1099:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1122:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1099:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 127,
                        "name": "COIN_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1144:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_COIN_STATE_$24_$",
                          "typeString": "type(enum BetGame.COIN_STATE)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "TAIL",
                      "nodeType": "MemberAccess",
                      "src": "1144:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_COIN_STATE_$24",
                        "typeString": "enum BetGame.COIN_STATE"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1099:60:0",
                    "trueExpression": {
                      "expression": {
                        "id": 125,
                        "name": "COIN_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1126:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_COIN_STATE_$24_$",
                          "typeString": "type(enum BetGame.COIN_STATE)"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "HEAD",
                      "nodeType": "MemberAccess",
                      "src": "1126:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_COIN_STATE_$24",
                        "typeString": "enum BetGame.COIN_STATE"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_COIN_STATE_$24",
                      "typeString": "enum BetGame.COIN_STATE"
                    }
                  },
                  "functionReturnParameters": 118,
                  "id": 130,
                  "nodeType": "Return",
                  "src": "1092:67:0"
                }
              ]
            },
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randomState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:2:0"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1074:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_COIN_STATE_$24",
                    "typeString": "enum BetGame.COIN_STATE"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "COIN_STATE",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 24,
                    "src": "1074:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_COIN_STATE_$24",
                      "typeString": "enum BetGame.COIN_STATE"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1073:12:0"
            },
            "scope": 137,
            "src": "1029:135:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1248:5:0",
              "statements": []
            },
            "id": 136,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1228:2:0"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:0"
            },
            "scope": 137,
            "src": "1220:33:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 138,
        "src": "109:1147:0"
      }
    ],
    "src": "0:1257:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/BetGame.sol",
    "exportedSymbols": {
      "BetGame": [
        137
      ],
      "Destroyable": [
        154
      ],
      "Ownable": [
        213
      ],
      "Payable": [
        255
      ],
      "ReentranceGuard": [
        279
      ]
    },
    "id": 138,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/Destroyable.sol",
        "file": "./Destroyable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 155,
        "src": "24:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/Payable.sol",
        "file": "./Payable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 256,
        "src": "52:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/ReentranceGuard.sol",
        "file": "./ReentranceGuard.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 280,
        "src": "76:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Destroyable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 154,
              "src": "129:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destroyable_$154",
                "typeString": "contract Destroyable"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "129:11:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "Payable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 255,
              "src": "142:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Payable_$255",
                "typeString": "contract Payable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "142:7:0"
          },
          {
            "baseName": {
              "id": 9,
              "name": "ReentranceGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 279,
              "src": "151:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentranceGuard_$279",
                "typeString": "contract ReentranceGuard"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "151:15:0"
          }
        ],
        "contractDependencies": [
          154,
          213,
          255,
          279
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 137,
        "linearizedBaseContracts": [
          137,
          279,
          255,
          154,
          213
        ],
        "name": "BetGame",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 13,
            "mutability": "constant",
            "name": "BET_PRICE",
            "nodeType": "VariableDeclaration",
            "scope": 137,
            "src": "172:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "172:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030303030",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "207:14:0",
              "subdenomination": "gwei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "100000000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 16,
            "mutability": "constant",
            "name": "INITIAL_BALANCE",
            "nodeType": "VariableDeclaration",
            "scope": 137,
            "src": "242:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "242:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "283:7:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 21,
            "mutability": "constant",
            "name": "PRIZE",
            "nodeType": "VariableDeclaration",
            "scope": 137,
            "src": "294:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "294:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "id": 18,
                "name": "BET_PRICE",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 13,
                "src": "325:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "32",
                "id": 19,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "337:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "src": "325:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "BetGame.COIN_STATE",
            "id": 24,
            "members": [
              {
                "id": 22,
                "name": "HEAD",
                "nodeType": "EnumValue",
                "src": "360:4:0"
              },
              {
                "id": 23,
                "name": "TAIL",
                "nodeType": "EnumValue",
                "src": "366:4:0"
              }
            ],
            "name": "COIN_STATE",
            "nodeType": "EnumDefinition",
            "src": "343:28:0"
          },
          {
            "anonymous": false,
            "id": 28,
            "name": "MakeBetEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "win",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "393:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "392:10:0"
            },
            "src": "374:29:0"
          },
          {
            "anonymous": false,
            "id": 30,
            "name": "WithdrawAllEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "428:2:0"
            },
            "src": "406:25:0"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "487:5:0",
              "statements": []
            },
            "id": 37,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 33,
                    "name": "INITIAL_BALANCE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16,
                    "src": "470:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 34,
                "modifierName": {
                  "id": 32,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 237,
                  "src": "464:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "464:22:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:0"
            },
            "scope": 137,
            "src": "435:57:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "610:193:0",
              "statements": [
                {
                  "assignments": [
                    51
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51,
                      "mutability": "mutable",
                      "name": "randomState",
                      "nodeType": "VariableDeclaration",
                      "scope": 80,
                      "src": "616:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_COIN_STATE_$24",
                        "typeString": "enum BetGame.COIN_STATE"
                      },
                      "typeName": {
                        "id": 50,
                        "name": "COIN_STATE",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 24,
                        "src": "616:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_COIN_STATE_$24",
                          "typeString": "enum BetGame.COIN_STATE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52,
                      "name": "randomState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "641:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_COIN_STATE_$24_$",
                        "typeString": "function () view returns (enum BetGame.COIN_STATE)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "641:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_COIN_STATE_$24",
                      "typeString": "enum BetGame.COIN_STATE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "616:38:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "win",
                      "nodeType": "VariableDeclaration",
                      "scope": 80,
                      "src": "660:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "660:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "671:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "660:16:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_COIN_STATE_$24",
                      "typeString": "enum BetGame.COIN_STATE"
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59,
                      "name": "randomState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "686:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_COIN_STATE_$24",
                        "typeString": "enum BetGame.COIN_STATE"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 60,
                      "name": "coinState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "701:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_COIN_STATE_$24",
                        "typeString": "enum BetGame.COIN_STATE"
                      }
                    },
                    "src": "686:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75,
                  "nodeType": "IfStatement",
                  "src": "682:89:0",
                  "trueBody": {
                    "id": 74,
                    "nodeType": "Block",
                    "src": "712:59:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67,
                              "name": "PRIZE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "740:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 62,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "720:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 65,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "720:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 66,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "720:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "720:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 69,
                        "nodeType": "ExpressionStatement",
                        "src": "720:26:0"
                      },
                      {
                        "expression": {
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 70,
                            "name": "win",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "754:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "760:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "754:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73,
                        "nodeType": "ExpressionStatement",
                        "src": "754:10:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 77,
                        "name": "win",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "794:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 76,
                      "name": "MakeBetEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "781:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "781:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "EmitStatement",
                  "src": "776:22:0"
                }
              ]
            },
            "functionSelector": "043336bf",
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42,
                    "name": "BET_PRICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "556:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 43,
                "modifierName": {
                  "id": 41,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 237,
                  "src": "550:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "550:16:0"
              },
              {
                "arguments": [],
                "id": 45,
                "modifierName": {
                  "id": 44,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 278,
                  "src": "567:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "567:14:0"
              },
              {
                "arguments": [
                  {
                    "id": 47,
                    "name": "BET_PRICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "599:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 48,
                "modifierName": {
                  "id": 46,
                  "name": "hasEnoughBalance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "582:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "582:27:0"
              }
            ],
            "name": "makeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "coinState",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "513:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_COIN_STATE_$24",
                    "typeString": "enum BetGame.COIN_STATE"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "COIN_STATE",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 24,
                    "src": "513:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_COIN_STATE_$24",
                      "typeString": "enum BetGame.COIN_STATE"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "512:22:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:0:0"
            },
            "scope": 137,
            "src": "496:307:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "860:39:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 88,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "881:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BetGame_$137",
                            "typeString": "contract BetGame"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BetGame_$137",
                            "typeString": "contract BetGame"
                          }
                        ],
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "873:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 86,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "873:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "873:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "873:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 85,
                  "id": 91,
                  "nodeType": "Return",
                  "src": "866:28:0"
                }
              ]
            },
            "functionSelector": "c574d156",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGameBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "830:2:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "854:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "853:6:0"
            },
            "scope": 137,
            "src": "807:92:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "943:82:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 105,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "977:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BetGame_$137",
                                "typeString": "contract BetGame"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BetGame_$137",
                                "typeString": "contract BetGame"
                              }
                            ],
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "969:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 103,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "969:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "969:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "969:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 98,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "949:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "949:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "949:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "949:42:0"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110,
                      "name": "WithdrawAllEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1002:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "EmitStatement",
                  "src": "997:23:0"
                }
              ]
            },
            "functionSelector": "853828b6",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 96,
                "modifierName": {
                  "id": 95,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 203,
                  "src": "933:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "933:9:0"
              }
            ],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:2:0"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:0"
            },
            "scope": 137,
            "src": "903:122:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "1086:78:0",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 119,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1099:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1099:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1117:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1099:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1122:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1099:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 127,
                        "name": "COIN_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1144:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_COIN_STATE_$24_$",
                          "typeString": "type(enum BetGame.COIN_STATE)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "TAIL",
                      "nodeType": "MemberAccess",
                      "src": "1144:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_COIN_STATE_$24",
                        "typeString": "enum BetGame.COIN_STATE"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1099:60:0",
                    "trueExpression": {
                      "expression": {
                        "id": 125,
                        "name": "COIN_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1126:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_COIN_STATE_$24_$",
                          "typeString": "type(enum BetGame.COIN_STATE)"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "HEAD",
                      "nodeType": "MemberAccess",
                      "src": "1126:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_COIN_STATE_$24",
                        "typeString": "enum BetGame.COIN_STATE"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_COIN_STATE_$24",
                      "typeString": "enum BetGame.COIN_STATE"
                    }
                  },
                  "functionReturnParameters": 118,
                  "id": 130,
                  "nodeType": "Return",
                  "src": "1092:67:0"
                }
              ]
            },
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randomState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:2:0"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1074:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_COIN_STATE_$24",
                    "typeString": "enum BetGame.COIN_STATE"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "COIN_STATE",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 24,
                    "src": "1074:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_COIN_STATE_$24",
                      "typeString": "enum BetGame.COIN_STATE"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1073:12:0"
            },
            "scope": 137,
            "src": "1029:135:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1248:5:0",
              "statements": []
            },
            "id": 136,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1228:2:0"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:0"
            },
            "scope": 137,
            "src": "1220:33:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 138,
        "src": "109:1147:0"
      }
    ],
    "src": "0:1257:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xdcbb43d7a99fa0abf3c369ade61f031e748e7398fc3774d6ef6819fd5f26e2e5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bool",
              "name": "win",
              "type": "bool"
            }
          ],
          "name": "MakeBetEvent",
          "type": "event"
        },
        "0x6aa1042049a04c07e8d72903f147a9cab5f3273a43479d2d211147df8ec53845": {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawAllEvent",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE17F1b29A707a546E97B46154a6807A196e54509",
      "transactionHash": "0xe933384b92146d9a6d9b592983d1a0db731a7d64ca637e9910479025dfc6cb32"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-28T21:38:39.536Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
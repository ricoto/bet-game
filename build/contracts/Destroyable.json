{
  "contractName": "Destroyable",
  "abi": [
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ricoto86/projects/course/bet-game-project/contracts/Destroyable.sol\":\"Destroyable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ricoto86/projects/course/bet-game-project/contracts/Destroyable.sol\":{\"keccak256\":\"0xae1d8227ccd776393ac67f2011131c40044333865fb0eb1dc0e2a67d3a167f04\",\"urls\":[\"bzz-raw://622fb8617afe0f2bb41c02c9a7047f607bbbd0f6005a6dd7609a9aa9a96b876f\",\"dweb:/ipfs/QmeoEc5YCLpwLjk1Kp2w6G9MQSU5XWshAYRk5Aa1ShPZ2Q\"]},\"/Users/ricoto86/projects/course/bet-game-project/contracts/Ownable.sol\":{\"keccak256\":\"0xe87130bfd45680a268fa0d0e5b716c5985e73ec7b051505ce993063d36f749da\",\"urls\":[\"bzz-raw://5555f3209739b71c27480441adc042a9cadd014280ec9e4f898e0bd9a2528495\",\"dweb:/ipfs/QmU7VBEvyFUR7Pv6MAnuS2gjBWUWHpX8CYi3D2B228zLhr\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.7.5;\n\nimport \"./Ownable.sol\";\n\nabstract contract Destroyable is Ownable {\n\n  function destroy() public isOwner {\n    selfdestruct(msg.sender);\n  }\n\n}\n",
  "sourcePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/Destroyable.sol",
  "ast": {
    "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/Destroyable.sol",
    "exportedSymbols": {
      "Destroyable": [
        117
      ],
      "Ownable": [
        176
      ]
    },
    "id": 118,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 102,
        "literals": [
          "solidity",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 103,
        "nodeType": "ImportDirective",
        "scope": 118,
        "sourceUnit": 177,
        "src": "24:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 104,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 176,
              "src": "82:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$176",
                "typeString": "contract Ownable"
              }
            },
            "id": 105,
            "nodeType": "InheritanceSpecifier",
            "src": "82:7:1"
          }
        ],
        "contractDependencies": [
          176
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 117,
        "linearizedBaseContracts": [
          117,
          176
        ],
        "name": "Destroyable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "129:35:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "148:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "148:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 110,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "135:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "135:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "135:24:1"
                }
              ]
            },
            "functionSelector": "83197ef0",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 108,
                "modifierName": {
                  "id": 107,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 166,
                  "src": "121:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "121:7:1"
              }
            ],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "111:2:1"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "129:0:1"
            },
            "scope": 117,
            "src": "95:69:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 118,
        "src": "49:118:1"
      }
    ],
    "src": "0:168:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/Destroyable.sol",
    "exportedSymbols": {
      "Destroyable": [
        117
      ],
      "Ownable": [
        176
      ]
    },
    "id": 118,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 102,
        "literals": [
          "solidity",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "/Users/ricoto86/projects/course/bet-game-project/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 103,
        "nodeType": "ImportDirective",
        "scope": 118,
        "sourceUnit": 177,
        "src": "24:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 104,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 176,
              "src": "82:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$176",
                "typeString": "contract Ownable"
              }
            },
            "id": 105,
            "nodeType": "InheritanceSpecifier",
            "src": "82:7:1"
          }
        ],
        "contractDependencies": [
          176
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 117,
        "linearizedBaseContracts": [
          117,
          176
        ],
        "name": "Destroyable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "129:35:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "148:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "148:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 110,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "135:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "135:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "135:24:1"
                }
              ]
            },
            "functionSelector": "83197ef0",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 108,
                "modifierName": {
                  "id": 107,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 166,
                  "src": "121:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "121:7:1"
              }
            ],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "111:2:1"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "129:0:1"
            },
            "scope": 117,
            "src": "95:69:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 118,
        "src": "49:118:1"
      }
    ],
    "src": "0:168:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-28T02:20:35.621Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}